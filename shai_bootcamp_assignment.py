# -*- coding: utf-8 -*-
"""ShAI_BootCamp_Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o-aH4HKYdutisNllxsc1pfG6dow2ZHgC

#About Dataset
salaries dataset generally provides information about the employees of an organization in relation to their compensation. It typically includes details such as how much each employee is paid (their salary), their job titles, the departments they work in, and possibly additional information like their level of experience, education, and employment history within the organization.

# Features
- 'Id'
- 'EmployeeName'
- 'JobTitle'
- 'BasePay'
- 'OvertimePay'
- 'OtherPay'
- 'Benefits'
- 'TotalPay' -> salary
- 'TotalPayBenefits'
- 'Year'
- 'Notes'
- 'Agency'
- 'Status'

# Tasks

1. **Basic Data Exploration**: Identify the number of rows and columns in the dataset, determine the data types of each column, and check for missing values in each column.

2. **Descriptive Statistics**: Calculate basic statistics mean, median, mode, minimum, and maximum salary, determine the range of salaries, and find the standard deviation.

3. **Data Cleaning**: Handle missing data by suitable method with explain why you use it.

4. **Basic Data Visualization**: Create histograms or bar charts to visualize the distribution of salaries, and use pie charts to represent the proportion of employees in different departments.

5. **Grouped Analysis**: Group the data by one or more columns and calculate summary statistics for each group, and compare the average salaries across different groups.

6. **Simple Correlation Analysis**: Identify any correlation between salary and another numerical column, and plot a scatter plot to visualize the relationship.

8. **Summary of Insights**: Write a brief report summarizing the findings and insights from the analyses.

# 1-Basic Data Exploration:
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


# Load your dataset
df = pd.read_csv('/content/Salaries.csv')
df.head()

"""


* the number of rows and columns in the dataset:



"""

print('data shape:\n',df.shape)

"""
* the data types of each column:
"""

df.info()

"""

* checking for missing values in each column:

"""

print(df.isnull().sum())

"""# 2-Descriptive Statistics:

* Calculating basic statistics mean, median, mode, minimum, maximum salary, the range of salaries, and the standard deviation:
"""

print(df['TotalPay'].describe())

"""# Data Cleaning

* Handling missing data by suitable method:

> since both 'Notes' and 'Status' colums are completely null then I will remove them.
"""

df=df.drop(['Status', 'Notes'], axis=1)
df.head()

"""

> since the number of null values of both 'Benefits' and 'BasePay' columns are small comparing to the full number of rows then I will replace it with mean values.

"""

#after data cleaning
df['Benefits'].fillna(df['Benefits'].mean(), inplace=True)
df['BasePay'].fillna(df['BasePay'].mean(), inplace=True)
df.head()

"""#4-Basic Data Visualization:


* visualizing the distribution of salaries using histogram:


"""

df['TotalPay'].hist()

"""

> representing the proportion of employees in different departments using pie charts:

"""

department_counts = df['JobTitle'].value_counts()
print(department_counts)

# Select the top 10 departments
top_n = 10
department_counts = department_counts.head(top_n)
print( 'the top 10 departments:\n', department_counts)
# Plotting the pie chart
plt.figure(figsize=(8, 6))
plt.pie(department_counts, labels=department_counts.index, autopct='%1.1f%%')
plt.title('Proportion of Employees in Different Departments')
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle
plt.show()

"""# 5- Grouped Analysis:


* Grouping the data by one or more columns, calculating summary statistics for each group, and comparing the average salaries across different groups:


"""

# Group the data by the 'JobTitle' column
grouped_data = df.groupby(['JobTitle'])

# Calculate summary statistics for each group based on salary
grouped_stats = grouped_data['TotalPay'].describe()
print(grouped_stats)

# Calculate the average salary for each group
grouped_salaries = grouped_data['TotalPay'].mean()

# Select the top 10 groups based on average salary
top_groups = grouped_salaries.nlargest(10)

# Plotting the bar chart
plt.figure(figsize=(10, 6))
top_groups.plot(kind='barh', color='blue')
plt.title('Top 10 Groups - Average Salary'.format(10))
plt.xlabel('Average Salary')
plt.ylabel('JobTitle')

"""# 6- Simple Correlation Analysis:


* Identifying any correlation between salary and another numerical column, and plotting a scatter plot to visualize the relationship:


"""

# Calculate the correlation coefficient between the two columns 'TotalPay' and 'Year'
correlation_coefficient = df['TotalPay'].corr(df['Year'])

# Create a scatter plot to visualize the relationship
plt.scatter(df['Year'], df['TotalPay'], alpha=0.5)
plt.title('Salary vs. ' + 'Year')
plt.xlabel('Year')
plt.ylabel('Salary')
plt.text(0.8, 0.9, f'Correlation: {correlation_coefficient:.2f}', ha='center', va='center', transform=plt.gca().transAxes)

"""> From the scatter plot, I can conclude that there is a positive correlation between salary and year. This means that salaries generally tend to increase over time.


> This correlation can be explained in several ways. One possibility is that companies pay higher salaries to experienced employees. This is because they believe that these employees are more productive and contribute more to the company.



> Another possibility is that inflation causes salaries to increase over time. This is because it causes the cost of living to rise, which means that companies need to pay more to employees to maintain the same standard of living.




> The correlation could also be the result of other factors, such as changes in the economy or laws that affect the labor market.



> In general, the positive correlation between salary and year indicates that salaries generally tend to increase over time. However, it is important to note that this correlation is not necessarily accurate for everyone. Salaries may vary from person to person.


---

# 7- Summary of Insights:
1. When reviewing the dataset, it was found that there are two columns, 'Status' and 'Notes', with all values being null. Therefore, these columns were removed.

2. It was also noticed that the 'Benefits' and 'BasePay' columns contain null values, but the number of null values is relatively small compared to the total number of records. Therefore, they were replaced with the respective column's mean values in order.

3. When examining the histogram of the salary column, it was observed that the most common salary is 100,000, with over 60,000 employees. As the salary range increases, there is a steady decline in the number of employees, with only a few earning more than $200,000.

4. The pie chart representing the proportion of employees in different departments shows that the most common job title in the organization is Registered Transit Operator, accounting for over (22%) of the employees. This is followed by Special Nurse (14.1%), Registered Nurse (12.0%), and Public Svc Aide-Public Works (8.1%).

5. After grouping the data by the 'jobTitle' column and calculating the average salary for the top 10 most common jobs, it is evident that the highest-paying job in the organization is General Manager-Metropolitan Transit Authority, with an average salary of 400,000. This is followed by Deputy Director of Investments (over 300,000), Chief of Departement (Fire Department) (300,000), and Deputy Chief of Departement (over 250,000).

6. After Identifying the correlation between salary and year It can be concluded that there is a positive correlation between them, indicating that salaries generally tend to increase over time.


>  
* The correlation between salary and year appears to be particularly strong in recent years.
* There are some data points scattered outside the trend line, suggesting that there are exceptions to this correlation.
* Although it is difficult to determine the exact value of the correlation coefficient from the plot, it appears to be fairly high.


---
"""